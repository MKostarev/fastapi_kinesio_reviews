import logging
from datetime import datetime
from typing import Dict, Any

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logger = logging.getLogger(__name__)


class NotificationService:
    @staticmethod
    def send_email_notification(subject: str, message: str):
        """
        –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ email-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.
        –ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–æ–Ω—Å–æ–ª—å.
        """
        timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")

        # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏ (—Å emoji)
        console_message = f"\nüìß EMAIL NOTIFICATION [{timestamp}]\n"
        console_message += f"üì≠ –¢–µ–º–∞: {subject}\n"
        console_message += f"üìÑ –°–æ–æ–±—â–µ–Ω–∏–µ: {message}\n"
        console_message += "‚îÄ" * 50

        # –ü—Ä–æ—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ª–æ–≥–≥–µ—Ä–∞ (–±–µ–∑ emoji)
        log_message = f"\nEMAIL NOTIFICATION [{timestamp}]\n"
        log_message += f"–¢–µ–º–∞: {subject}\n"
        log_message += f"–°–æ–æ–±—â–µ–Ω–∏–µ: {message}\n"
        log_message += "-" * 50

        # –õ–æ–≥–∏—Ä—É–µ–º –±–µ–∑ emoji
        logger.info(log_message)
        # –í—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å —Å emoji
        print(console_message)

    @staticmethod
    def sync_completed_notification(results: Dict[str, Any], source: str = "manual"):
        """
        –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
        """
        subject = f"–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ ({source})"

        message = f"–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:\n"
        message += f"‚Ä¢ –ù–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π: {results.get('new', 0)}\n"
        message += f"‚Ä¢ –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π: {results.get('updated', 0)}\n"
        message += f"‚Ä¢ –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {results.get('total', 0)}\n"

        if results.get('new', 0) > 0 and results.get('new_ids'):
            message += f"‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω—ã –∑–∞–ø–∏—Å–∏: {results.get('new_ids', [])}\n"

        message += f"\n–ò—Å—Ç–æ—á–Ω–∏–∫: {source}"

        NotificationService.send_email_notification(subject, message)

    @staticmethod
    def sync_failed_notification(error: str, source: str = "manual"):
        """
        –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
        """
        subject = f"–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ ({source})"
        message = f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:\n{error}"

        NotificationService.send_email_notification(subject, message)

    @staticmethod
    def no_new_data_notification(source: str = "manual"):
        """
        –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
        """
        subject = f"–ù–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–æ ({source})"
        message = "–í –ø—Ä–æ—Ü–µ—Å—Å–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –Ω–æ–≤—ã—Ö –æ—Ç–∑—ã–≤–æ–≤ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ."

        NotificationService.send_email_notification(subject, message)